import React, { useState } from 'react';

const UserList = ({ users, onUserClick }) => {

  const [selectedUser, setSelectedUser] = useState(null);
  const handleClick = (user) => {
    if (selectedUser && selectedUser.id === user.id) {
      setSelectedUser(null);
    } else {
    setSelectedUser(user);
    }
    onUserClick(user);
  }
  return (
    <div className="user-list">
      {users.map(user => (
        <div 
          key={user.id} 
          className={`mb-2 p-4 cursor-pointer user-card ${selectedUser && selectedUser.id === user.id ? 'user-selected' : ''}`}
          onClick={() => handleClick(user)}
        >
          <h3 className="text-xl">{user.name}</h3>
          <p className="text-sm">Email: {user.email}</p>
          <p className='flex'>
          <svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12.5 20.0099L16.955 15.5549C17.836 14.6738 18.436 13.5513 18.679 12.3292C18.9221 11.1072 18.7973 9.84047 18.3204 8.68933C17.8436 7.53819 17.0361 6.55431 16.0001 5.86208C14.964 5.16986 13.746 4.80038 12.5 4.80038C11.254 4.80038 10.036 5.16986 9 5.86208C7.96399 6.55431 7.1565 7.53819 6.67965 8.68933C6.2028 9.84047 6.078 11.1072 6.32103 12.3292C6.56407 13.5513 7.16402 14.6738 8.04503 15.5549L12.5 20.0099ZM12.5 22.5551L6.77243 16.8275C5.63963 15.6947 4.86819 14.2514 4.55566 12.6802C4.24313 11.109 4.40354 9.48032 5.01661 8.00024C5.62969 6.52017 6.66788 5.25512 7.99992 4.36509C9.33196 3.47505 10.898 3 12.5 3C14.1021 3 15.6681 3.47505 17.0001 4.36509C18.3322 5.25512 19.3704 6.52017 19.9834 8.00024C20.5965 9.48032 20.7569 11.109 20.4444 12.6802C20.1319 14.2514 19.3604 15.6947 18.2276 16.8275L12.5 22.5551ZM12.5 12.8999C12.9774 12.8999 13.4353 12.7103 13.7728 12.3727C14.1104 12.0352 14.3 11.5773 14.3 11.0999C14.3 10.6225 14.1104 10.1647 13.7728 9.82714C13.4353 9.48957 12.9774 9.29993 12.5 9.29993C12.0226 9.29993 11.5648 9.48957 11.2272 9.82714C10.8897 10.1647 10.7 10.6225 10.7 11.0999C10.7 11.5773 10.8897 12.0352 11.2272 12.3727C11.5648 12.7103 12.0226 12.8999 12.5 12.8999ZM12.5 14.6999C11.5452 14.6999 10.6296 14.3206 9.95444 13.6455C9.27931 12.9704 8.90003 12.0547 8.90003 11.0999C8.90003 10.1452 9.27931 9.22948 9.95444 8.55434C10.6296 7.87921 11.5452 7.49993 12.5 7.49993C13.4548 7.49993 14.3705 7.87921 15.0456 8.55434C15.7207 9.22948 16.1 10.1452 16.1 11.0999C16.1 12.0547 15.7207 12.9704 15.0456 13.6455C14.3705 14.3206 13.4548 14.6999 12.5 14.6999Z" fill="#0A0D14"/>
          </svg>
            {user.address.city}
          </p>
        </div>
      ))}
    </div>
  );
};

export default UserList;